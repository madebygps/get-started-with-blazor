@page "/fetchdata"
@using System.Text.Json.Serialization
@inject HttpClient Http

<h1>Crypto prices</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (coins == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Current Price</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var coin in coins)
            {
                <tr>
                    <td>@coin.Symbol</td>
                    <td>@coin.CurrentPrice</td>
                  
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private Coin[] coins;

    protected override async Task OnInitializedAsync()
    {
        // forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
            coins = await Http.GetFromJsonAsync<Coin[]>("https://cryptodatadotnet.azurewebsites.net/api/GetPricesJson");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    public class Coin
    {
        [JsonPropertyName("symbol")]
        public string Symbol { get; set;}

        [JsonPropertyName("current_price")]
        public double CurrentPrice {get; set;}
    }
}
